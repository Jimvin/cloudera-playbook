---

- include_vars: "{{ inventory_dir }}/group_vars/db_server.yml"
- include_vars: "{{ inventory_dir }}/group_vars/scm_server.yml"
- include_vars: "{{ inventory_dir }}/group_vars/scm_server_enc.yml"
- include_vars: "{{ inventory_dir }}/group_vars/ldap_enc.yml"
- include_vars: "{{ inventory_dir }}/group_vars/tls_enc.yml"

- name: Install the Cloudera Manager Server Packages
  yum:
    name:
    - cloudera-manager-daemons
    - cloudera-manager-server
    - cloudera-manager-agent
    - openldap-clients
    state: installed

#To Do
#Change scm_dir to use if statement - previously /usr/share/cmf/
#Remove MySQL ref

- name: Prepare Cloudera Manager Server External Database
  command: "{{ scm_dir }}/schema/scm_prepare_database.sh
             -f
             --host {{ databases.scm.host }}
             --port {{ databases.scm.port }}
             {{ databases.scm.type }} {{ databases.scm.name }} {{ databases.scm.user }} {{ databases.scm.pass }}"
  changed_when: False

#- name: Download & Install Custom Service Descriptors - Spark2   
#  get_url:
#   url: http://archive.cloudera.com/spark2/CSD/SPARK2_ON_YARN-2.3.0.cloudera4.jar
#   dest: /opt/cloudera/csd
#   mode: 0600
#   owner: cloudera-scm
#   group: cloudera-scm

#- name: Download & Install Custom Service Descriptors - CDSW
#  get_url:
#   url: http://archive.cloudera.com/cdsw1/CSD/CLOUDERA_DATA_SCIENCE_WORKBENCH-CDH5-1.4.2.jar
#   dest: /opt/cloudera/csd
#   mode: 0600
#   owner: cloudera-scm
#   group: cloudera-scm

- name: Start the Cloudera Manager Server
  service: name={{ item }} state=restarted enabled=yes
  notify:
    - wait cloudera-scm-server
  with_items:
    - cloudera-scm-server
    - cloudera-scm-agent

# Trigger handler to wait for SCM to startup
- meta: flush_handlers

- name: Get Cloudera Manager API version
  uri:
    url: http://{{ hostvars[scm_hostname]['inventory_hostname'] }}:{{ scm_port }}/api/version
    method: GET
    status_code: 200
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    force_basic_auth: yes
    return_content: yes
  register: result

# Set base CM API URL
- set_fact: cm_api_url="http://{{ hostvars[scm_hostname]['inventory_hostname'] }}:{{ scm_port }}/api/{{ result.content }}"

# Install Cloudera Manager Python API
# - include: api.yml

# Retrieve auto-generated host IDs from SCM
- name: Get SCM hostIds for inventory hosts
  become: true
  action: scm_hosts
  register: scm_hosts_result
  vars:
    use_tls: False
# environment:
#   PYTHONPATH: "{{ ansible_env.PYTHONPATH }}:/usr/lib/python2.7/site-packages/cm_api-19.0.0-py2.7.egg"

- set_fact: scm_host_ids="{{ scm_hosts_result.host_ids }}"

- set_fact: scm_host_names="{{ scm_hosts_result.host_names }}"

- include: license.yml
- include: scm.yml
- include: cms.yml
