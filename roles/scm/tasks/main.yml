---

- include_vars: "{{ inventory_dir }}/group_vars/db_server.yml"
- include_vars: "{{ inventory_dir }}/group_vars/scm_server.yml"
- include_vars: "{{ inventory_dir }}/group_vars/ldap_enc.yml"
- include_vars: "{{ inventory_dir }}/group_vars/pki.yml"

- name: Install the Cloudera Manager Server Packages
  yum:
    name:
    - cloudera-manager-daemons
    - cloudera-manager-server
    - cloudera-manager-agent
    - openldap-clients
    state: installed

- name: Create SCM Dir
  file:
    path: /var/lib/cloudera-scm-server
    state: directory
    owner: cloudera-scm
    group: cloudera-scm
    mode: 0775

#To Do
#Change scm_dir to use if statement - previously /usr/share/cmf/
#Remove MySQL ref

- name: Prepare Cloudera Manager Server External Database
  command: |
    {{ scm_prepare_database_script_path }}  -f
    --host {{ databases.scm.host }}
    --port {{ databases.scm.port }}
    {{ databases.scm.type }} {{ databases.scm.name }} {{ databases.scm.user }} {{ databases.scm.pass }}


  changed_when: False

- name: Create CSD directory
  file:
    path: /opt/cloudera/csd
    state: directory
    owner: cloudera-scm
    group: cloudera-scm
    mode: 0755

- name: Download CSDs
  get_url:
    url: "{{ item }}"
    dest: /opt/cloudera/csd
    mode: 0644
  with_items: "{{ scm_csds }}"
  when: scm_csds is defined

- name: Start the Cloudera Manager Server
  service: name={{ item }} state=restarted enabled=yes
  notify:
    - wait cloudera-scm-server
  with_items:
    - cloudera-scm-server
    - cloudera-scm-agent

# Trigger handler to wait for SCM to startup
- meta: flush_handlers

- name: Get Cloudera Manager API version
  uri:
    url: http://{{ hostvars[scm_hostname]['inventory_hostname'] }}:{{ scm_port }}/api/version
    method: GET
    status_code: 200
    user: "{{ scm_default_user }}"
    password: "admin"
    force_basic_auth: yes
    return_content: yes
  register: result

# Set base CM API URL
- set_fact: cm_api_url="http://{{ hostvars[scm_hostname]['inventory_hostname'] }}:{{ scm_port }}/api/{{ result.content }}"

- debug:
    var: cm_api_url
    verbosity: 1

- name: Update Cloudera Manager password
  uri:
    url: "{{ cm_api_url }}/users/admin"
    method: PUT
    body_format: json
    body: "{ \"name\": \"{{ scm_default_user }}\", \"password\": \"{{ scm_default_pass }}\" }"
    status_code: 200
    force_basic_auth: yes
    user: "{{ scm_default_user }}"
    password: "admin"
    return_content: yes
  register: pw_resp


- name: Get the host identifiers and names from Cloudera Manager
  uri:
    url: "{{ cm_api_url }}/hosts"
    method: GET
    status_code: 200
    user: "{{ scm_default_user }}"
    password: "{{ scm_default_pass }}"
    force_basic_auth: yes
    return_content: yes
  register: scm_host_list

- name: Extract the host identifiers and names into facts
  set_fact:
    scm_hosts: "{{ lookup('template', 'scm_host_list.j2') | from_yaml }}"

- name: Print the extracted host identifiers and names
  debug:
    var: scm_hosts
    verbosity: 2

- include: license.yml
- include: scm.yml
- include: cms.yml
