{
  "refName": "YARN-1",
  "serviceType": "YARN",
  "serviceConfigs": [
    {
      "name": "cm_yarn_container_usage_job_user",
      "variable": "CMJOBUSER"
    }, {
      "name": "zookeeper_service",
      "ref": "ZOOKEEPER-1"
    }, {
      "name": "hdfs_service",
      "ref": "HDFS-1"
    }, {
      "name" : "yarn_admin_acl",
      "variable" : "YARN_ADMIN_ACL"
    {% if (krb5_kdc_type == 'ad') or (krb5_kdc_type == 'mit') %}
    }, {
      "name": "hadoop_secure_web_ui",
      "value": "true"
    {% endif %}
    }, {
      "name": "cm_yarn_enable_container_usage_aggregation",
      "value": "true"
    }, {
      "name" : "cm_yarn_container_usage_job_pool",
      "value" : "root.default"
    }
    {% if (cdh_tls) %}
      , {
      "name" : "yarn_service_mapred_safety_valve",
      "value" : "<property><name>mapreduce.job.encrypted-intermediate-data</name><value>true</value><final>true</final><description>Enable encryption for intermediate MapreduceSpills</description></property><property><name>mapreduce.job.encrypted-intermediate-data-key-size-bits</name><value>128</value><final>true</final><description>The key length used to encrypt data spilled to disk</description></property><property><name>mapreduce.job.encrypted-intermediate-data.buffer.kb</name><value>128</value><final>true</final><description>The buffer size in Kb for the stream written to disk after encryption</description></property><property><name>mapreduce.shuffle.ssl.enabled</name><value>true</value><final>true</final><description>Enable YARN encrypted shuffle</description></property>"
    }, {
      "name" : "ssl_server_keystore_password",
      "value" : "{{ tls.keystore_password }}"
    }, {
      "name" : "ssl_client_truststore_password",
      "value" : "{{ tls.truststore_password }}"
    }, {
      "name" : "ssl_server_keystore_location",
      "value" : "{{ tls.keystore_path }}"
    }, {
      "name" : "ssl_server_keystore_keypassword",
      "value" : "{{ tls.keystore_password }}"
    }
    {% endif %}
  ],
  "roleConfigGroups": [
    {
      "refName": "YARN-1-JOBHISTORY-BASE",
      "roleType": "JOBHISTORY",
      "configs": [ {
        "name" : "oom_heap_dump_enabled",
        "value" : "false"
      }, {
        "name" : "mr2_jobhistory_log_dir",
        "value" : "{{ log_base }}/hadoop-mapreduce"
      } ],
      "base": true
    }, {
      "refName": "YARN-1-GATEWAY-BASE",
      "roleType": "GATEWAY",
      "configs": [ {
        "name" : "mapreduce_client_config_safety_valve",
        "value" : ""
      }, {
        "name" : "hadoop_job_history_dir",
        "value" : "{{ log_base }}/hadoop-mapreduce/history"
      }, {
        "name" : "mapred_reduce_tasks",
        "value" : "368"
      }, {
        "name" : "mapred_submit_replication",
        "value" : "3"
      } 
      ],
      "base": true
    }, {
      "refName": "YARN-1-NODEMANAGER-BASE",
      "roleType": "NODEMANAGER",
      "configs": [
        {
          "name": "yarn_nodemanager_local_dirs",
          "variable": "YARN_NODEMANAGER_LOCAL_DIRS"
        }, {
          "name": "yarn_nodemanager_log_dirs",
          "variable": "YARN_NODEMANAGER_LOG_DIRS"
        }, {
          "name" : "node_manager_log_dir",
          "value" : "{{ log_base }}/hadoop-yarn"
        {% if (cdh_services | json_query('[?type==`yarn`].yarn_nodemanager_resource_memory_mb') | length > 0 )  %}
        }, {
          "name" : "yarn_nodemanager_resource_memory_mb",
          "variable" : "YARN_NODEMANAGER_RESOURCE_MEMORY_MB"
        {% endif %}
        {% if (cdh_services | json_query('[?type==`yarn`].yarn_nodemanager_resource_cpu_vcores') | length > 0 )  %}
        }, {
          "name" : "yarn_nodemanager_resource_cpu_vcores",
          "variable" : "YARN_NODEMANAGER_RESOURCE_CPU_VCORES"
        {% endif %}
        }, {
        "name" : "yarn_nodemanager_heartbeat_interval_ms",
        "value" : "240"
      }, {
        "name" : "oom_heap_dump_enabled",
        "value" : "false"
      } 
      ],
      "base": true
    }, {
      "refName": "YARN-1-RESOURCEMANAGER-BASE",
      "roleType": "RESOURCEMANAGER",
      "configs": [ {
        "name" : "resource_manager_log_dir",
        "value" : "{{ log_base }}/hadoop-yarn"
      {% if (cdh_services | json_query('[?type==`yarn`].yarn_scheduler_maximum_allocation_vcores') | length > 0 )  %}
      }, {
        "name" : "yarn_scheduler_maximum_allocation_vcores",
        "variable" : "YARN_SCHEDULER_MAXIMUM_ALLOCATION_VCORES"
      {% endif %}
      {% if (cdh_services | json_query('[?type==`yarn`].yarn_scheduler_maximum_allocation_mb') | length > 0 )  %}
      }, {
        "name" : "yarn_scheduler_maximum_allocation_mb",
        "variable" : "YARN_SCHEDULER_MAXIMUM_ALLOCATION_MB"
      {% endif %}
      {% if (cdh_services | json_query('[?type==`yarn`].resource_manager_java_heapsize') | length > 0 )  %}
      }, {
        "name" : "resource_manager_java_heapsize",
        "variable" : "RESOURCE_MANAGER_JAVA_HEAPSIZE"
      {% endif %}
      }, {
        "name" : "resourcemanager_fair_scheduler_preemption",
        "value" : "true"
      }, {
        "name" : "oom_heap_dump_enabled",
        "value" : "false"
      }, {
        "name" : "yarn_scheduler_fair_continuous_scheduling_enabled",
        "value" : "true"
      }, {
        "name" : "resourcemanager_fair_scheduler_assign_multiple",
        "value" : "false"
      } ],
      "base": true
    }
  ]
}
